{
    "/home/human/Escriptori/p/javadoc/test/examples/sample-1.js": [
        [
            {
                "name": "default",
                "text": "\n\nThis is on the 'default' property."
            },
            {
                "name": "@param",
                "text": "Parameter one"
            },
            {
                "name": "@param",
                "text": "Parameter two"
            },
            {
                "name": "@intercalado",
                "text": "ok"
            },
            {
                "name": "@name",
                "text": "Name"
            },
            {
                "name": "@attr",
                "text": "Attribute"
            },
            {
                "name": "@param",
                "text": "Parameter three"
            },
            {
                "name": "@returns",
                "text": "Returns"
            },
            {
                "name": "@code",
                "text": "This block must have indentation\n\n```js\nvar a = {\n b: {\n   c: {\n     d: \"e\"\n   }\n }\n};\n```\n"
            },
            {
                "name": "@description",
                "text": "Something else\n\nBut multiline too."
            },
            {
                "name": "@",
                "text": ""
            }
        ],
        [
            {
                "name": "default",
                "text": "\n\nAnother comment."
            },
            {
                "name": "@another",
                "text": "tag"
            }
        ]
    ],
    "/home/human/Escriptori/p/javadoc/test/examples/sample-2.js": [
        [
            {
                "name": "default",
                "text": "\n\n\nThe text of the examples is also important.\n\nI hope the things come to better state.\nIn any case.\n"
            }
        ]
    ],
    "/home/human/Escriptori/p/javadoc/test/examples/sample-3.js": [
        [
            {
                "name": "default",
                "text": "\n\n"
            },
            {
                "name": "@Something",
                "text": "Ok"
            },
            {
                "name": "@SomethingElse",
                "text": "Ok\n"
            }
        ]
    ],
    "/home/human/Escriptori/p/javadoc/test/examples/sample-4.js": [
        [
            {
                "name": "default",
                "text": "\n"
            },
            {
                "name": "@file",
                "text": "sample-4.js\n\n"
            }
        ]
    ],
    "/home/human/Escriptori/p/javadoc/test/examples/sample-7.js": [
        [
            {
                "name": "default",
                "text": "\n\nDefault context for the current Javadoc comment.\nDefault context for the current Javadoc comment.\nDefault context for the current Javadoc comment.\n"
            },
            {
                "name": "@name",
                "text": "Some name\n"
            },
            {
                "name": "@property",
                "text": "Property name. Property explanation\n"
            },
            {
                "name": "@class",
                "text": "Class name.\n"
            },
            {
                "name": "@method",
                "text": "Method name.\n"
            },
            {
                "name": "@description",
                "text": "This is a description.\nAny tag can be multiline, not only description.\nTake into account that the order of them is respected when generating JSON or Markdown.\n"
            },
            {
                "name": "@parameter",
                "text": "Parameter one.\n"
            },
            {
                "name": "@parameter",
                "text": "Parameter two.\n"
            },
            {
                "name": "@parameter",
                "text": "Parameter three.\n"
            },
            {
                "name": "@NewInventedTag",
                "text": "This is a new invented tag. \nThe first letter is uppercased, but in Markdown output, all the tags will be capitalized.\n\n\n"
            }
        ]
    ],
    "/home/human/Escriptori/p/javadoc/test/examples/sample.js": [
        [
            {
                "name": "default",
                "text": "\n"
            },
            {
                "name": "@Lots",
                "text": "/* This is a multiline comment test */\nthings\nto\n\nsay\n"
            }
        ],
        [
            {
                "name": "default",
                "text": "\n\n"
            },
            {
                "name": "@param",
                "text": "Parameter one"
            },
            {
                "name": "@param",
                "text": "Parameter two"
            },
            {
                "name": "@intercalado",
                "text": "ok"
            },
            {
                "name": "@name",
                "text": "Name"
            },
            {
                "name": "@intercalado",
                "text": "ok"
            },
            {
                "name": "@attr",
                "text": "Attribute"
            },
            {
                "name": "@intercalado",
                "text": "ok"
            },
            {
                "name": "@param",
                "text": "Parameter three"
            },
            {
                "name": "@intercalado",
                "text": "ok"
            },
            {
                "name": "@returns",
                "text": "Returns"
            },
            {
                "name": "@intercalado",
                "text": "ok"
            },
            {
                "name": "@code",
                "text": "This block must have indentation"
            },
            {
                "name": "@intercalado",
                "text": "ok\n\n```js\nvar a = {\n b: {\n   c: {\n     d: \"e\"\n   }\n }\n};\n```\n"
            },
            {
                "name": "@description",
                "text": "Something else\n\nBut multiline too.\n\n"
            },
            {
                "name": "@Multiple words separated by spaces are allowed too",
                "text": "Separate words with \"_\" to create labels with spaces.\n\n"
            }
        ]
    ]
}